  /***************************************************************\
  *     The skeleton of this class is generated by an automatic *
  * code generator for NC product. It is based on Velocity.     *
  \***************************************************************/
      	package nc.vo.bankpub.bankdbsett;
   	
	import java.util.ArrayList;

import nc.vo.pub.NullFieldException;
import nc.vo.pub.SuperVO;
import nc.vo.pub.ValidationException;
	
/**
 * <b> 在此处简要描述此类的功能 </b>
 *
 * <p>
 *     在此处添加此类的描述信息
 * </p>
 *
 * 创建日期:2008-10-16
 * @author ${vmObject.author}
 * @version Your Project 1.0
 */
     public class BankDbsettVO extends SuperVO {
           
             public String free3;
             public Integer dr;
             public String free2;
             public String port;
             public String dbtype;
             public String pwd;
             public String pd_dbsett;
             public String free1;
             public String ts;
             public String username;
             public String ip;
             public String free4;
             public String pk_system;
            
             public static final String  FREE3="free3";   
             public static final String  DR="dr";   
             public static final String  FREE2="free2";   
             public static final String  PORT="port";   
             public static final String  DBTYPE="dbtype";   
             public static final String  PWD="pwd";   
             public static final String  PD_DBSETT="pd_dbsett";   
             public static final String  FREE1="free1";   
             public static final String  TS="ts";   
             public static final String  USERNAME="username";   
             public static final String  IP="ip";   
             public static final String  FREE4="free4";   
             public static final String  PK_SYSTEM="pk_system";   
      
    
        /**
	   * 属性free3的Getter方法.
	   *
	   * 创建日期:2008-10-16
	   * @return String
	   */
	 public String getFree3() {
		 return free3;
	  }   
	  
     /**
	   * 属性free3的Setter方法.
	   *
	   * 创建日期:2008-10-16
	   * @param newFree3 String
	   */
	public void setFree3(String newFree3) {
		
		free3 = newFree3;
	 } 	  
       
        /**
	   * 属性dr的Getter方法.
	   *
	   * 创建日期:2008-10-16
	   * @return Integer
	   */
	 public Integer getDr() {
		 return dr;
	  }   
	  
     /**
	   * 属性dr的Setter方法.
	   *
	   * 创建日期:2008-10-16
	   * @param newDr Integer
	   */
	public void setDr(Integer newDr) {
		
		dr = newDr;
	 } 	  
       
        /**
	   * 属性free2的Getter方法.
	   *
	   * 创建日期:2008-10-16
	   * @return String
	   */
	 public String getFree2() {
		 return free2;
	  }   
	  
     /**
	   * 属性free2的Setter方法.
	   *
	   * 创建日期:2008-10-16
	   * @param newFree2 String
	   */
	public void setFree2(String newFree2) {
		
		free2 = newFree2;
	 } 	  
       
        /**
	   * 属性port的Getter方法.
	   *
	   * 创建日期:2008-10-16
	   * @return String
	   */
	 public String getPort() {
		 return port;
	  }   
	  
     /**
	   * 属性port的Setter方法.
	   *
	   * 创建日期:2008-10-16
	   * @param newPort String
	   */
	public void setPort(String newPort) {
		
		port = newPort;
	 } 	  
       
        /**
	   * 属性dbtype的Getter方法.
	   *
	   * 创建日期:2008-10-16
	   * @return String
	   */
	 public String getDbtype() {
		 return dbtype;
	  }   
	  
     /**
	   * 属性dbtype的Setter方法.
	   *
	   * 创建日期:2008-10-16
	   * @param newDbtype String
	   */
	public void setDbtype(String newDbtype) {
		
		dbtype = newDbtype;
	 } 	  
       
        /**
	   * 属性pwd的Getter方法.
	   *
	   * 创建日期:2008-10-16
	   * @return String
	   */
	 public String getPwd() {
		 return pwd;
	  }   
	  
     /**
	   * 属性pwd的Setter方法.
	   *
	   * 创建日期:2008-10-16
	   * @param newPwd String
	   */
	public void setPwd(String newPwd) {
		
		pwd = newPwd;
	 } 	  
       
        /**
	   * 属性pd_dbsett的Getter方法.
	   *
	   * 创建日期:2008-10-16
	   * @return String
	   */
	 public String getPd_dbsett() {
		 return pd_dbsett;
	  }   
	  
     /**
	   * 属性pd_dbsett的Setter方法.
	   *
	   * 创建日期:2008-10-16
	   * @param newPd_dbsett String
	   */
	public void setPd_dbsett(String newPd_dbsett) {
		
		pd_dbsett = newPd_dbsett;
	 } 	  
       
        /**
	   * 属性free1的Getter方法.
	   *
	   * 创建日期:2008-10-16
	   * @return String
	   */
	 public String getFree1() {
		 return free1;
	  }   
	  
     /**
	   * 属性free1的Setter方法.
	   *
	   * 创建日期:2008-10-16
	   * @param newFree1 String
	   */
	public void setFree1(String newFree1) {
		
		free1 = newFree1;
	 } 	  
       
        /**
	   * 属性ts的Getter方法.
	   *
	   * 创建日期:2008-10-16
	   * @return String
	   */
	 public String getTs() {
		 return ts;
	  }   
	  
     /**
	   * 属性ts的Setter方法.
	   *
	   * 创建日期:2008-10-16
	   * @param newTs String
	   */
	public void setTs(String newTs) {
		
		ts = newTs;
	 } 	  
       
        /**
	   * 属性username的Getter方法.
	   *
	   * 创建日期:2008-10-16
	   * @return String
	   */
	 public String getUsername() {
		 return username;
	  }   
	  
     /**
	   * 属性username的Setter方法.
	   *
	   * 创建日期:2008-10-16
	   * @param newUsername String
	   */
	public void setUsername(String newUsername) {
		
		username = newUsername;
	 } 	  
       
        /**
	   * 属性ip的Getter方法.
	   *
	   * 创建日期:2008-10-16
	   * @return String
	   */
	 public String getIp() {
		 return ip;
	  }   
	  
     /**
	   * 属性ip的Setter方法.
	   *
	   * 创建日期:2008-10-16
	   * @param newIp String
	   */
	public void setIp(String newIp) {
		
		ip = newIp;
	 } 	  
       
        /**
	   * 属性free4的Getter方法.
	   *
	   * 创建日期:2008-10-16
	   * @return String
	   */
	 public String getFree4() {
		 return free4;
	  }   
	  
     /**
	   * 属性free4的Setter方法.
	   *
	   * 创建日期:2008-10-16
	   * @param newFree4 String
	   */
	public void setFree4(String newFree4) {
		
		free4 = newFree4;
	 } 	  
       
        /**
	   * 属性pk_system的Getter方法.
	   *
	   * 创建日期:2008-10-16
	   * @return String
	   */
	 public String getPk_system() {
		 return pk_system;
	  }   
	  
     /**
	   * 属性pk_system的Setter方法.
	   *
	   * 创建日期:2008-10-16
	   * @param newPk_system String
	   */
	public void setPk_system(String newPk_system) {
		
		pk_system = newPk_system;
	 } 	  
       
       
    /**
	  * 验证对象各属性之间的数据逻辑正确性.
	  *
	  * 创建日期:2008-10-16
	  * @exception nc.vo.pub.ValidationException 如果验证失败,抛出
	  * ValidationException,对错误进行解释.
	 */
	 public void validate() throws ValidationException {
	
	 	ArrayList errFields = new ArrayList(); // errFields record those null

                                                      // fields that cannot be null.
       		  // 检查是否为不允许空的字段赋了空值,你可能需要修改下面的提示信息:
	
	   	
	    StringBuffer message = new StringBuffer();
		message.append("下列字段不能为空:");
		if (errFields.size() > 0) {
		String[] temp = (String[]) errFields.toArray(new String[0]);
		message.append(temp[0]);
		for ( int i= 1; i < temp.length; i++ ) {
			message.append(",");
			message.append(temp[i]);
		}
		throw new NullFieldException(message.toString());
		}
	 }
			   
       
   	/**
	  * <p>取得父VO主键字段.
	  * <p>
	  * 创建日期:2008-10-16
	  * @return java.lang.String
	  */
	public java.lang.String getParentPKFieldName() {
	  	 
	 	    return null;
	 	
	}   
    
    /**
	  * <p>取得表主键.
	  * <p>
	  * 创建日期:2008-10-16
	  * @return java.lang.String
	  */
	public java.lang.String getPKFieldName() {
	 	  return "pd_dbsett";
	 	}
    
	/**
      * <p>返回表名称.
	  * <p>
	  * 创建日期:2008-10-16
	  * @return java.lang.String
	 */
	public java.lang.String getTableName() {
				
		return "BANK_DBSETT";
	}    
    
    /**
	  * 按照默认方式创建构造子.
	  *
	  * 创建日期:2008-10-16
	  */
	public BankDbsettVO() {
			
			   super();	
	  }    
    
            /**
	 * 使用主键进行初始化的构造子.
	 *
	 * 创建日期:2008-10-16
	 * @param newPd_dbsett 主键值
	 */
	 public BankDbsettVO(String newPd_dbsett) {
		
		// 为主键字段赋值:
		 pd_dbsett = newPd_dbsett;
	
    	}
    
     
     /**
	  * 返回对象标识,用来唯一定位对象.
	  *
	  * 创建日期:2008-10-16
	  * @return String
	  */
	   public String getPrimaryKey() {
				
		 return pd_dbsett;
	   
	   }

     /**
	  * 设置对象标识,用来唯一定位对象.
	  *
	  * 创建日期:2008-10-16
	  * @param newPd_dbsett  String    
	  */
	 public void setPrimaryKey(String newPd_dbsett) {
				
				pd_dbsett = newPd_dbsett; 
				
	 } 
           
	  /**
       * 返回数值对象的显示名称.
	   *
	   * 创建日期:2008-10-16
	   * @return java.lang.String 返回数值对象的显示名称.
	   */
	 public String getEntityName() {
				
	   return "BANK_DBSETT"; 
				
	 } 
} 
